{"version":3,"sources":["utils.js","Components/LoginForm.js","Components/FoodList.js","Components/MyCart.js","Components/SignupForm.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","loginUrl","username","password","fetch","method","headers","credentials","then","response","status","Error","signup","data","body","JSON","stringify","LoginForm","state","loading","onFinish","values","setState","message","success","props","onSuccess","catch","err","error","finally","name","style","width","margin","this","Item","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","type","htmlType","Component","Option","Select","AddToCartButton","itemId","useState","setLoading","title","icon","PlusOutlined","onClick","addItemToCart","FoodList","curRest","setCurRest","restaurants","setRestaurants","foodData","setFoodData","useEffect","json","resData","restId","menuData","value","onSelect","map","item","id","marginTop","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","extra","src","imageUrl","alt","height","display","price","Text","Typography","MyCart","cartVisible","setCartVisible","cartData","setCartData","checking","setChecking","onCloseDrawer","shape","onClose","visible","footer","justifyContent","strong","totalPrice","marginRight","disabled","orderItemList","length","itemLayout","Meta","menuItem","description","SignupForm","displayModal","handleCancel","signupOnClick","render","onCancel","destroyOnClose","initialValues","remember","preserve","React","Header","Layout","Content","Title","App","authed","setAuthed","className","level","color","lineHeight","marginBottom","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be1402f9.chunk.js","sourcesContent":["// login api\r\nexport const login = (credential) => {\r\n    const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\r\n\r\n    return fetch(loginUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\"\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to log in\");\r\n        }\r\n    });\r\n};\r\n\r\nexport const signup = (data) => {\r\n    const signupUrl = \"/signup\";\r\n\r\n    return fetch(signupUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to sign up\");\r\n        }\r\n    });\r\n};\r\n\r\n// fetch restaurants data\r\nexport const getRestaurants = () => {\r\n    return fetch(\"/restaurants\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get restaurants\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const getMenus = (restId) => {\r\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get menus\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const getCart = () => {\r\n    return fetch(\"/cart\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get shopping cart data\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const checkout = () => {\r\n    return fetch(\"/checkout\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to checkout\");\r\n        }\r\n    });\r\n};\r\n\r\nexport const addItemToCart = (itemId) => {\r\n    return fetch(`/order/${itemId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to add menu item to shopping cart\");\r\n        }\r\n    });\r\n};\r\n","import React, {Component} from 'react';\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nimport { login } from \"../utils\";\r\n\r\nclass LoginForm extends Component {\r\n    state = {\r\n        loading: false,\r\n    };\r\n\r\n    onFinish = (values) => {\r\n        // set button loading\r\n        this.setState( {loading : true })\r\n        login(values)\r\n            .then( () => {\r\n                // login successfully\r\n                // inform user, parent component app\r\n                message.success(`Login Successful`);\r\n                this.props.onSuccess();\r\n            })\r\n            .catch( (err) => {\r\n                message.error(err.message);\r\n            })\r\n            .finally( () => {\r\n                // do whatever\r\n                // set button not loading\r\n                this.setState( {loading : false })\r\n            })\r\n    };\r\n    render() {\r\n        return (\r\n            <Form\r\n                name=\"normal_login\"\r\n                style={{\r\n                    width: 300,\r\n                    margin: \"auto\",\r\n                }}\r\n\r\n                onFinish={this.onFinish}\r\n            >\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your Username!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input prefix={<UserOutlined />} placeholder=\"Username\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your Password!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password\r\n                        prefix={<LockOutlined />}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                    />\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            loading={this.state.loading}>\r\n                        Log in\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React, {useState, useEffect} from 'react';\r\nimport {Select, List, Card, Tooltip, Button, message} from \"antd\";\r\nimport {addItemToCart, getMenus, getRestaurants} from \"../utils\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst AddToCartButton = ({ itemId }) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const AddToCart = () => {\r\n        // step1: set loading\r\n        // step2: send data to server\r\n        // step2.1: status report\r\n        // finally: set loading\r\n        setLoading(true);\r\n        addItemToCart(itemId)\r\n            .then(() => message.success(`Successfully add item`))\r\n            .catch((err) => message.error(err.message))\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Tooltip title=\"Add to shopping cart\">\r\n            <Button\r\n                loading={loading}\r\n                type=\"primary\"\r\n                icon={<PlusOutlined />}\r\n                onClick={AddToCart}\r\n            />\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nfunction FoodList(props) {\r\n    const [curRest, setCurRest] = useState();\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [foodData, setFoodData] = useState([]);\r\n\r\n\r\n    // didMount\r\n    useEffect( () => {\r\n        // step1: set loading status to true\r\n        // step2: fetch restaurants data from server\r\n        // step3: handle error: if success, setRestaurants; if failed, ...\r\n        // finally: set loading status to false\r\n        setLoading(true)\r\n        getRestaurants()\r\n            .then( (resData) => {\r\n                setRestaurants(resData);\r\n            })\r\n            .catch( err => {\r\n                message.error(err.message);\r\n            })\r\n            .finally( () => {\r\n                setLoading(false);\r\n            })\r\n    }, []);\r\n\r\n    //didUpdate -> update selected restaurant\r\n    useEffect( () => {\r\n        // step1: set loading status -> true\r\n        // step2: get menu from server\r\n        // step2.1: success: setFoodData; fail: print error\r\n        // finally: ...\r\n        setLoading(true)\r\n        getMenus(curRest)\r\n            .then( menuData => {\r\n                setFoodData(menuData);\r\n            })\r\n            .catch( err => {\r\n                message.error(err.message);\r\n            })\r\n            .finally( () => {\r\n                setLoading(false);\r\n            })\r\n    }, [curRest])\r\n\r\n    return (\r\n        <div>\r\n            <Select value={ curRest }\r\n                    placeholder=\"Select a Restaurant\"\r\n                    loading={ loading }\r\n                    style={{ width: 300 }}\r\n                    onSelect={ (value) => setCurRest(value) }\r\n            >\r\n                {\r\n                    restaurants.map( item => {\r\n                        return <Option key={ item.id } value={item.id}>{ item.name }</Option>\r\n                    })\r\n                }\r\n            </Select>\r\n            {\r\n                curRest\r\n                    &&\r\n                <List\r\n                    style={{ marginTop: 20 }}\r\n                    grid={{\r\n                        gutter: 16,\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 4,\r\n                        lg: 4,\r\n                        xl: 3,\r\n                        xxl: 3,\r\n                    }}\r\n                    dataSource={foodData}\r\n                    renderItem={ item => (\r\n                        <List.Item>\r\n                            <Card title={item.name} extra={<AddToCartButton itemId={item.id}/>}>\r\n                                <img\r\n                                    src={item.imageUrl}\r\n                                    alt={item.name}\r\n                                    style={{ height: \"auto\", width: \"100%\", display: \"block\" }}\r\n                                />\r\n                                { `Price: ${item.price}`}\r\n                            </Card>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FoodList;","import { Button, Drawer, List, message, Typography } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { checkout, getCart } from \"../utils\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst MyCart = () => {\r\n    const [cartVisible, setCartVisible] = useState(false);\r\n    const [cartData, setCartData] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!cartVisible) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        getCart()\r\n            .then((data) => {\r\n                setCartData(data);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }, [cartVisible]);\r\n\r\n    const onCheckOut = () => {\r\n        setChecking(true);\r\n        checkout()\r\n            .then(() => {\r\n                message.success(\"Successfully checkout\");\r\n                setCartVisible(false);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                setChecking(false);\r\n            });\r\n    };\r\n\r\n    const onCloseDrawer = () => {\r\n        setCartVisible(false);\r\n    };\r\n\r\n    const onOpenDrawer = () => {\r\n        setCartVisible(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button type=\"primary\" shape=\"round\" onClick={onOpenDrawer}>\r\n                Cart\r\n            </Button>\r\n            <Drawer\r\n                title=\"My Shopping Cart\"\r\n                onClose={onCloseDrawer}\r\n                visible={cartVisible}\r\n                width={520}\r\n                footer={\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                        <Text strong={true}>{`Total price: $${cartData?.totalPrice}`}</Text>\r\n                        <div>\r\n                            <Button onClick={onCloseDrawer} style={{ marginRight: 8 }}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button\r\n                                onClick={onCheckOut}\r\n                                type=\"primary\"\r\n                                loading={checking}\r\n                                disabled={loading || cartData?.orderItemList.length === 0}\r\n                            >\r\n                                Checkout\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            >\r\n                <List\r\n                    loading={loading}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={cartData?.orderItemList}\r\n                    renderItem={(item) => (\r\n                        <List.Item>\r\n                            <List.Item.Meta\r\n                                title={item.menuItem.name}\r\n                                description={`$${item.price}`}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MyCart;","import { Button, Form, Input, message, Modal } from \"antd\";\r\nimport React from \"react\";\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { signup } from \"../utils\";\r\n\r\nclass SignupForm extends React.Component {\r\n    state = {\r\n        displayModal: false,\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            displayModal: false,\r\n        });\r\n    };\r\n\r\n    signupOnClick = () => {\r\n        this.setState({\r\n            displayModal: true,\r\n        });\r\n    };\r\n\r\n    onFinish = (data) => {\r\n        signup(data)\r\n            .then(() => {\r\n                this.setState({\r\n                    displayModal: false,\r\n                });\r\n                message.success(`Successfully signed up`);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            });\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <Button shape=\"round\" type=\"primary\" onClick={this.signupOnClick}>\r\n                    Register\r\n                </Button>\r\n                <Modal\r\n                    title=\"Register\"\r\n                    visible={this.state.displayModal}\r\n                    onCancel={this.handleCancel}\r\n                    footer={null}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <Form\r\n                        name=\"normal_register\"\r\n                        initialValues={{ remember: true }}\r\n                        onFinish={this.onFinish}\r\n                        preserve={false}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                            rules={[{ required: true, message: \"Please input your email!\" }]}\r\n                        >\r\n                            <Input prefix={<UserOutlined />} placeholder=\"Email\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your password!\" },\r\n                            ]}\r\n                        >\r\n                            <Input prefix={<LockOutlined />} placeholder=\"Password\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your first name!\" },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"firstname\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your last name!\" },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"lastname\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Register\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default SignupForm;\r\n","import { Layout, Typography } from \"antd\";\nimport './App.css';\nimport React, {useState} from 'react';\nimport LoginForm from \"./Components/LoginForm\";\nimport FoodList from \"./Components/FoodList\";\nimport MyCart from \"./Components/MyCart\";\nimport SignupForm from \"./Components/SignupForm\";\n\nconst { Header, Content } = Layout;\nconst { Title } = Typography;\n\nfunction App() {\n    const [ authed, setAuthed ] = useState(false);\n\n  return (\n    <Layout style={{ height : \"100vh\" }}>\n      <Header>\n          <div className=\"header\">\n              <Title\n                  level={2}\n                  style={{ color: \"white\", lineHeight: \"inherit\", marginBottom: 0 }}\n              >\n                  Lai Food\n              </Title>\n              <div>\n                  {\n                      authed ?\n                          <MyCart />\n                          :\n                          <SignupForm />\n                  }\n              </div>\n          </div>\n      </Header>\n\n      <Content style={{\n          padding: \"50px\",\n          maxHeight: \"calc(100% - 64px)\",\n          overflowY: \"auto\",\n      }}>\n          {\n              authed\n                  ?\n                  <FoodList />\n                  :\n                  <LoginForm\n                      onSuccess={() => setAuthed(true)}\n                  />\n          }\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}